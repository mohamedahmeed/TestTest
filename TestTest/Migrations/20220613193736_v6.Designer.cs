// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTest;

namespace TestTest.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20220613193736_v6")]
    partial class v6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestTest.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("countryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("TestTest.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoomsNumber")
                        .HasColumnType("int");

                    b.Property<string>("hotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("regionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("regionId");

                    b.ToTable("hotels");
                });

            modelBuilder.Entity("TestTest.Model.Rooms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<bool>("booked")
                        .HasColumnType("bit");

                    b.Property<int>("hotelId")
                        .HasColumnType("int");

                    b.Property<int>("statesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("hotelId");

                    b.HasIndex("statesId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("TestTest.Model.states", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("States")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("states");
                });

            modelBuilder.Entity("TestTest.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("regionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.ToTable("regions");
                });

            modelBuilder.Entity("TestTest.Hotel", b =>
                {
                    b.HasOne("TestTest.Region", "region")
                        .WithMany("Hotels")
                        .HasForeignKey("regionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("region");
                });

            modelBuilder.Entity("TestTest.Model.Rooms", b =>
                {
                    b.HasOne("TestTest.Hotel", "hotel")
                        .WithMany("rooms")
                        .HasForeignKey("hotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestTest.Model.states", "states")
                        .WithMany("rooms")
                        .HasForeignKey("statesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");

                    b.Navigation("states");
                });

            modelBuilder.Entity("TestTest.Region", b =>
                {
                    b.HasOne("TestTest.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("TestTest.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("TestTest.Hotel", b =>
                {
                    b.Navigation("rooms");
                });

            modelBuilder.Entity("TestTest.Model.states", b =>
                {
                    b.Navigation("rooms");
                });

            modelBuilder.Entity("TestTest.Region", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
